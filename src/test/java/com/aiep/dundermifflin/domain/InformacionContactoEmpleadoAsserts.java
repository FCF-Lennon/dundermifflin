package com.aiep.dundermifflin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InformacionContactoEmpleadoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformacionContactoEmpleadoAllPropertiesEquals(
        InformacionContactoEmpleado expected,
        InformacionContactoEmpleado actual
    ) {
        assertInformacionContactoEmpleadoAutoGeneratedPropertiesEquals(expected, actual);
        assertInformacionContactoEmpleadoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformacionContactoEmpleadoAllUpdatablePropertiesEquals(
        InformacionContactoEmpleado expected,
        InformacionContactoEmpleado actual
    ) {
        assertInformacionContactoEmpleadoUpdatableFieldsEquals(expected, actual);
        assertInformacionContactoEmpleadoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformacionContactoEmpleadoAutoGeneratedPropertiesEquals(
        InformacionContactoEmpleado expected,
        InformacionContactoEmpleado actual
    ) {
        assertThat(expected)
            .as("Verify InformacionContactoEmpleado auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformacionContactoEmpleadoUpdatableFieldsEquals(
        InformacionContactoEmpleado expected,
        InformacionContactoEmpleado actual
    ) {
        assertThat(expected)
            .as("Verify InformacionContactoEmpleado relevant properties")
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformacionContactoEmpleadoUpdatableRelationshipsEquals(
        InformacionContactoEmpleado expected,
        InformacionContactoEmpleado actual
    ) {
        assertThat(expected)
            .as("Verify InformacionContactoEmpleado relationships")
            .satisfies(e -> assertThat(e.getEmpleado()).as("check empleado").isEqualTo(actual.getEmpleado()));
    }
}
